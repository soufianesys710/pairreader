[project]
name = "pairreader"
version = "0.1.12"
description = "Your pair reader through your books, presentations, notes and more"
readme = "README.md"
authors = [
    { name = "soufianesys710", email = "soufianenidam7@gmail.com" }
]
requires-python = ">=3.12"
dependencies = [
    "chainlit>=2.8.0",
    "chromadb>=1.0.21",
    "docling>=2.52.0",
    "langchain>=0.3.27",
    "langchain-anthropic>=0.3.20",
    "langchain-tavily>=0.2.11",
    "langgraph>=0.6.7",
    "langsmith>=0.4.29",
]

[dependency-groups]
dev = [
    "jupyter>=1.1.1",
    "notebook>=7.4.5",
]
test = [
    "pytest>=8.3.0",
    "pytest-asyncio>=0.24.0",
    "pytest-cov>=6.0.0",
    "pytest-mock>=3.14.0",
    "httpx>=0.28.1",
]
pre-commit = [
    "pre-commit>=4.3.0",
]

[project.scripts]
pairreader = "pairreader.__main__:main"

[build-system]
requires = ["uv_build>=0.8.17,<0.9.0"]
build-backend = "uv_build"

[tool.pytest.ini_options]
minversion = "8.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--showlocals",
    "--cov=src/pairreader",
    "--cov-report=term-missing",
    "--cov-report=html",
]
testpaths = ["tests"]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
markers = [
    "unit: Unit tests for individual components",
    "integration: Integration tests with mocked external dependencies",
    "slow: Tests that take a long time to run",
]

# Ruff - Fast Python linter + formatter (replaces Black, isort, flake8)
[tool.ruff]
target-version = "py312"              # Target Python 3.12 syntax
line-length = 100                     # Max line length before wrapping
exclude = [                           # Directories to skip
    ".venv",                          # Virtual environment
    "__pycache__",                    # Python bytecode
    ".pytest_cache",                  # Pytest cache
    ".ruff_cache",                    # Ruff cache
    "htmlcov",                        # Coverage reports
    "chroma",                         # Vector store data
    ".chainlit",                      # Chainlit session data
    ".files",                         # Uploaded files
]

[tool.ruff.lint]
select = [                            # Linting rules to enable
    "E",                              # PEP 8 errors (indentation, spacing)
    "W",                              # PEP 8 warnings
    "F",                              # Pyflakes (undefined vars, unused imports)
    "I",                              # Import sorting (like isort)
    "B",                              # Bugbear (likely bugs and anti-patterns)
    "C4",                             # Better comprehensions
    "UP",                             # Modern Python syntax upgrades
]
ignore = [                            # Rules to skip
    "E501",                           # Line too long (formatter handles this)
    "B008",                           # Function calls in defaults (needed for Chainlit)
    "B904",                           # Raise without 'from' clause
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]              # Allow unused imports (re-exports)
